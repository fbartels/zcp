#! /bin/sh
#
### BEGIN INIT INFO
# Provides:          zarafa-presence
# Required-Start:    $syslog $network $remote_fs
# Required-Stop:     $syslog $network $remote_fs
# Should-Start:      zarafa-server
# Should-Stop:       zarafa-server
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: 
# Description:       
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
PRESENCE=/usr/sbin/zarafa-presence
DESC="Zarafa presence"
NAME=`basename $PRESENCE`
#QUIETDAEMON=--quiet
PIDFILE=/var/run/zarafad/presence.pid

test -x $PRESENCE || exit 0

# Include zarafa defaults if available
if [ -f /etc/default/zarafa ] ; then
	. /etc/default/zarafa
fi
if [ -z "$ZARAFA_LOCALE" ]; then
	ZARAFA_LOCALE="C"
fi

if [ -e "$PRESENCE_CONFIG" ]; then
	PRESENCE_OPTS="$PRESENCE_OPTS -c $PRESENCE_CONFIG"
fi

#set -e

. /lib/lsb/init-functions

case "$1" in
  start)
	if [ "$PRESENCE_ENABLED" = "no" ]; then
		log_warning_msg "Zarafa presence daemon not enabled in /etc/default/zarafa ... not starting"
		exit 0
	fi
	log_begin_msg "Starting $DESC: $NAME"
	install -dm0775 -o zarafa -g zarafa /var/run/zarafad
	export LC_ALL=$ZARAFA_LOCALE
	export LANG=$ZARAFA_LOCALE
	start-stop-daemon --start $QUIETDAEMON --pidfile $PIDFILE --exec /usr/bin/python $PRESENCE -- $PRESENCE_OPTS
	log_end_msg $?
	unset LC_ALL LANG
	;;
  stop)
	log_begin_msg "Stopping $DESC: $NAME"
	start-stop-daemon --stop $QUIETDAEMON --pidfile /var/run/$NAME.pid --retry TERM/15/KILL --exec /usr/bin/python $PRESENCE >/dev/null
	RETVAL2="$?"
	rm -f "/var/run/$NAME.pid"
	start-stop-daemon --stop $QUIETDAEMON --pidfile $PIDFILE --retry TERM/15/KILL --exec /usr/bin/python $PRESENCE >/dev/null
	RETVAL=$?
	rm -f $PIDFILE
	test "$RETVAL2" -eq 0 || test "$RETVAL" -eq 0
	log_end_msg "$?"
	;;
  restart)
	$0 stop
	$0 start
	;;
  status)
	status_of_proc "$PRESENCE" "$NAME" && exit 0 || exit $?
	;;
  reload|force-reload)
	log_begin_msg "Reloading $DESC: $NAME"
	start-stop-daemon --stop $QUIETDAEMON --signal HUP --pidfile $PIDFILE --exec /usr/bin/python $PRESENCE
	log_end_msg $?
	;;
try-restart)
	"$0" status >/dev/null && "$0" restart
	;;
  *)
	N=/etc/init.d/$NAME
	echo "Usage: $N {start|stop|restart|reload|force-reload|status}" >&2
	exit 1
	;;
esac

exit 0
